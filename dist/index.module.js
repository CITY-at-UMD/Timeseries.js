import t from"dayjs";import e,{DataFrame as r}from"data-forge";import n from"lodash/isEqual";import a from"lodash/has";import u from"lodash/fromPairs";import o from"lodash/toPairs";import{median as i,medianAbsoluteDeviation as f,quantile as s,sampleStandardDeviation as l,mean as d,max as c}from"simple-statistics";import{Studentt as v}from"distributions";function h(){return(h=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}var p=function(t,e,r){var n,a=e.startValue,i=e.endValue,f=e.entryIndex,s=e.numEntries,l=r.overrideValue,d=r.dateFunction,c=r.date,v=r.flag;if(-1===["pad","interpolate","average","dateFunction","value"].indexOf(t))throw new Error("fill Type not supported");return"pad"===t?(n=u(o(a).map((function(t){var e=t[0];return[e,a[e]]}))),v=v||["fill","pad"]):"interpolate"===t?(n=u(o(a).map((function(t){var e=t[0];return[e,a[e]+(f+1)*((i[e]-a[e])/(s+1))]}))),v=v||["fill",t]):"average"===t?(n=u(o(a).map((function(t){var e=t[0];return[e,(a[e]+i[e])/s]}))),v=v||["fill",t]):"dateFunction"===t&&d?(n=u(o(a).map((function(t){return[t[0],d(c)]}))),v=v||["fill",t]):"value"===t?(n=u(o(a).map((function(t){var e=t[0];return[e,"number"==typeof l?l:l[e]]}))),v=v||["fill",t]):(n=u(o(a).map((function(t){return[t[0],null]}))),v=["fill"]),h({},n,{flag:v})};function m(t){var e=t.deflate((function(t){return t.x})).toArray(),n=l(e),a=d(e);if(0===n){var u=t.generateSeries({ares:function(t){return 0}});return{R:0,std:n,mean:a,df:u}}var o=new r({values:e.map((function(t){return{x:t,ares:Math.abs(t-a)/n}}))});return{R:c(o.deflate((function(t){return t.ares})).toArray()),df:o,std:n,mean:a}}function y(t,e,r){var n=function(t,e,r){return 1-r/(2*(t-e+1))}(t,e,r),a=function(t,e){return new v(e).inv(t)}(n,t-e-1);return{lambda:a*(t-e)/Math.sqrt((t-e-1+Math.pow(a,2))*(t-e+1)),p:n,t:a}}var g=function(t,e,r){return.6745*(t-r)/e};function w(t){var e=i(t),r=f(t),n=(t=t.sort((function(t,e){return e-t})).filter((function(t){return t>0})).map((function(t){return[t,g(t,r,e)]}))).filter((function(t){return Math.abs(t[1])>=3.5}));return{thresholds:{upper:Math.min.apply(Math,[Infinity].concat(n.map((function(t){return t[0]})))),lower:0}}}var b=e.DataFrame;function O(t){var e=void 0===t?{}:t;if(e.lowerThreshold>e.upperThreshold)throw new Error("thresholds invalid");var r=this.where((function(t){return(e=t.value)<void 0||e>void 0;var e})).generateSeries({raw:function(t){return t.value},flag:function(t){var e=t.flag;return["outlier"].concat(void 0===e?[]:e)}}).transformSeries({value:function(t){return null}});return this.merge(r)}b.prototype.setDateIndex=function(e){if(void 0===e&&(e="date"),-1===this.getColumnNames().indexOf(e))throw new Error("No Date Column in DataFrame");return this.orderBy((function(t){return t[e].valueOf()})).withIndex((function(e){return t(e.date).toDate()}))},b.prototype.getInterval=function(){var e,r,n;return e=this.getIndex().window(2).select((function(t){return t.last()-t.first()})).detectValues().orderBy((function(t){return-t.Frequency})).orderBy((function(t){return t.Value})).first().Value,r=t(),(n=t().add(e)).diff(r,"month",!0)>=11?["year",Math.ceil(n.diff(r,"year",!0))]:n.diff(r,"day",!0)>=28?["month",Math.ceil(n.diff(r,"month",!0))]:n.diff(r,"hour",!0)>=23?["day",Math.ceil(n.diff(r,"day",!0))]:n.diff(r,"minute",!0)>=55?["hour",Math.ceil(n.diff(r,"hour",!0))]:["minute",n.diff(r,"minute")]},b.prototype.getValueColumns=function(){return this.detectTypes().where((function(t){return"number"===t.Type})).distinct((function(t){return t.Column})).getSeries("Column").toArray()},b.prototype.getDateRange=function(e,r){var n=t(this.first().date),a=t(this.last().date);return r&&(n=n.startOf(r),a=a.endOf(r)),a.diff(n,e)},b.prototype.calculateThresholdOptions=function(t){var e,n,a,u,o=void 0===t?{}:t,i=o.k,f=o.filterZeros,l=void 0===f||f,d=o.filterNegative,c=void 0===d||d,v=this.where((function(t){return null==t.flag||Array.isArray(t.flag)&&0===t.flag.length})).where((function(t){return!isNaN(t.value)&&null!==t.value})).getSeries("value");return l&&(v=v.where((function(t){return 0!==t}))),c&&(v=v.where((function(t){return t>0}))),i||(i=v.count()<1e3?Math.floor(.15*v.count()):Math.min.apply(Math,[1e3,Math.floor(.02*v.count())])),v.count()<5?{}:{esd:function(t,e,n){void 0===t&&(t=[]),void 0===e&&(e=10),void 0===n&&(n=.05);for(var a,u=new r({values:t.map((function(t){return{x:t}}))}),o=u.getSeries("x").count(),i=1,f=[],s=!1;i<=e;){var l={};1===i?function(){var t=m(u),e=t.R,r=t.df,n=t.mean,o=t.std;a=r.where((function(t){return t.ares!==e})),l=Object.assign({},l,{mean:n,std:o,Value:r.where((function(t){return t.ares===e})).getSeries("x").first(),R:e})}():function(){var t=m(a),e=t.R,r=t.df,n=t.mean,u=t.std;a=r.where((function(t){return t.ares!==e})),l=Object.assign({},l,{mean:n,std:u,Value:r.where((function(t){return t.ares===e})).getSeries("x").first(),R:e})}();var d=y(o,i,n);if(l=Object.assign({},l,{lambda:d.lambda}),f.push(l),s&&l.R>l.lambda&&(s=!1),0===l.R)break;if(l.R<l.lambda){if(s)break;s=!0}i++}var c=(f=new r(f).generateSeries({outlier:function(t){return t.R>t.lambda}}).takeWhile((function(t){return t.outlier}))).where((function(t){return t.Value>0})).deflate((function(t){return t.Value}));return{outliers:f,thresholds:{lower:0,upper:c.count()>0?c.min():Infinity},iterations:i}}(v.toArray(),i).thresholds,box:(e=v.toArray(),n=s(e,.25),a=s(e,.75),{thresholds:{lowerInner:n-1.5*(u=a-n),upperInner:n-3*u,lowerOuter:a+1.5*u,upperOuter:a+3*u}}).thresholds,modz:w(v.toArray()).thresholds}},b.prototype.claculateStatistics=function(t){void 0===t&&(t={});var e=t.column,r=void 0===e?"value":e,n=t.filterZeros,a=void 0!==n&&n,u=t.filterNegative,o=void 0===u||u,i=this.deflate((function(t){return t[r]})).where((function(t){return!isNaN(t)}));o&&(i=i.where((function(t){return t>=0}))),a&&(i=i.where((function(t){return 0!==t})));var l=i.median(),d=i.average(),c=i.count(),v=i.std(),h=i.min(),p=i.max(),m=f(i.toArray()),y=s(i.toArray(),.25),g=s(i.toArray(),.75);return{median:l,mean:d,count:c,std:v,min:h,max:p,mad:m,q1:y,q3:g,iqr:g-y}},b.prototype.transformAllSeries=function(t,e){var r=e.exclude,n=this,a=a=n.detectTypes().where((function(t){return"number"===t.Type})).distinct((function(t){return t.Column})).getSeries("Column").toArray();return r&&Array.isArray(r)&&(a=a.filter((function(t){return-1===r.indexOf(t)}))),a.forEach((function(e){var r;n=n.transformSeries(((r={})[e]=function(e){return isNaN(e)?e:t(e)},r))})),n},b.prototype.removeOutliers=O,b.prototype.clean=O,b.prototype.group=function(e,r){if(-1===["hour","day","month","year"].indexOf(e))throw new Error("interval type not supported");return this.groupBy((function(r){return t(r.date).startOf(e)}))},b.prototype.downsample=function(e,r){var n=e[0],a=e[1];if(void 0===r&&(r="sum"),-1===["hour","day","month","year"].indexOf(n))throw new Error("interval type not supported");if(-1===["sum","avg","median"].indexOf(r))throw new Error("aggregation type not suppported, only:");var o=function(t){return t.date.startOf(n)},i=this.valueColumns;return a&&(o=function(t){return t.date.startOf(n).add(a,n)}),this.groupBy(o).select((function(t){return h({date:t.first().date.startOf(n)},u([].concat(i.map((function(e){var n;switch(r){case"median":n=t.deflate((function(t){return t[e]})).where((function(t){return t})).median();break;case"avg":n=t.deflate((function(t){return t[e]})).where((function(t){return t})).average();break;default:n=t.deflate((function(t){return t[e]})).where((function(t){return t})).sum()}return[e,n]})),t.getColumnNames().filter((function(t){return"date"!==t})).filter((function(t){return-1===i.indexOf(t)})).map((function(e){var r=t.deflate((function(t){return t[e]})).distinct().toArray();return 1===r.length&&(r=r[0]),[e,r]})))))})).inflate().withIndex((function(e){return t(e.date).toDate()}))},b.prototype.upsample=function(e,r){var n=e[0],a=e[1];return void 0===r&&(r="avg"),this.fillGaps(function(e){var r=e[0],n=e[1],a=void 0===n?1:n;return function(e,n){var u=e[0];return Math.floor(t(n[0]).diff(u,r,!0)/a)>0}}([n,a]),function(e,r,n){var a=r[0],u=r[1],o={},i=o.overrideValue,f=o.dateFunction,s=o.flag;return function(r,n){for(var o=t(r[0]),l=t(n[0]),d=Math.floor(t(l).diff(o,a)/u)-1,c=r[1],v=n[1],h=[],m=0;m<d;++m){var y=p(e,{startValue:c,endValue:v,entryIndex:m,numEntries:d},{overrideValue:i,dateFunction:f,flag:s}),g=t(o).add((m+1)*u,a).toDate(),w=[g.valueOf(),Object.assign({},y,{date:g})];h.push(w)}return h}}(r,[n,a]))},b.prototype.populateSeries=function(t,e){var r;switch(void 0===e&&(e="avg"),e){case"fill":r=t;break;default:r=t/this.count()}return this.generateSeries({value:function(t){return r}})},b.prototype.fill=function(){var t=this.first().date.toDate(),e=this.last().date.toDate(),r=this.getInterval(),n=b.blank(t,e,r,"missing");return this.joinOuterRight(n,(function(t){return t.date.valueOf()}),(function(t){return t.date.valueOf()}),(function(t,e){return t||e}))},b.prototype.reduceToValue=function(t){return this.generateSeries({value:function(e){return function(t,e){return void 0===e&&(e=[]),e.map((function(e){return t[e]})).filter((function(t){return t}))[0]||0}(e,t)}}).subset(["date","value"])},b.prototype.annualIntensity=function(t){var e=this;void 0===t&&(t=1);var r=this.getInterval();return this.groupBy((function(t){return t.date.year()})).select((function(n){var a,o=n.first().date,i=n.last().date.add(r[1]||1,r[0]||"month"),f=(a=o,365/dayjs(i).diff(dayjs(a),"day"));return h({startDate:o,endDate:i},u(e.valueColumns.map((function(e){return[e,n.deflate((function(t){return t[e]})).where((function(t){return t})).sum()*f/t]}))))})).inflate().renameSeries({startDate:"date"}).dropSeries("endDate")},b.prototype.addBaselineDelta=function(t){var e;if(t instanceof b||(t=new b(t).setDateIndex()),t.count()>1){var r,u=this.getInterval(),o=t.interval;if(!n(u,o))throw console.error(u,o),new Error("baseline and data intervals do not match");switch(u[0]){case"day":r=function(t){return t.month()+"-"+t.date()};break;case"month":r=function(t){return t.month()};break;default:r=function(t){return 0}}var i=t.withIndex((function(t){return r(t.date)}));e=this.generateSeries({baseline:function(t){return e=r(t.date),(n=i.at(e))&&a(n,"value")?n.value:i.getSeries("value").average();var e,n}})}else e=this.generateSeries({baseline:function(e){return t.first().value}});return e.generateSeries({delta:function(t){return(t.value-(e=t.baseline))/e;var e}})},b.blank=function(e,r,n,a){var u=n[0],o=n[1],i=void 0===o?1:o;if(["minute","hour","day","month","year"].indexOf(u)<0)throw console.error(s),new Error("interval type not supported");e=t(e),r=t(r);for(var f=[e],s=function(e){var r=e[0],n=e[1],a=t();return t().add(n,r).diff(a)}([u,i]);f[f.length-1].valueOf()<r.valueOf();)f.push(t(f[f.length-1]).add(i,u));var l=new b(f.map((function(t){return{date:t}}))).setDateIndex();return a&&(l=l.generateSeries({flag:function(t){return[a]}})),l},b.aggregate=function(t){Array.isArray(t)||(t=[t]),t=t.map((function(t){return new b(t).setDateIndex()}));var r=[].concat(new Set(t.map((function(t){return t.getValueColumns()})).reduce((function(t,e){return t.concat(e)}),[]))),n=e.DataFrame.concat(t).groupBy((function(t){return t.date})).select((function(t){var e={date:t.first().date};return r.forEach((function(r){return e[r]=t.deflate((function(t){return t[r]})).sum()})),e})).inflate().toArray();return new b(n.toArray()).setDateIndex()};export default b;
//# sourceMappingURL=index.module.js.map
