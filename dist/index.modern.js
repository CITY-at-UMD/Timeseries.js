import e from"dayjs";import t,{DataFrame as r}from"data-forge";import n from"lodash/isEqual";import l from"lodash/has";import o from"lodash/get";import i from"lodash/fromPairs";import s from"lodash/toPairs";import{mean as u,median as d,medianAbsoluteDeviation as f,quantile as h,sampleStandardDeviation as p,max as c,ckmeans as g}from"simple-statistics";import{Studentt as m}from"distributions";function y(){return(y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e}).apply(this,arguments)}function w(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)t.indexOf(r=l[a])>=0||(n[r]=e[r]);return n}const v=([t,r])=>{let a=e();return e().add(r,t).diff(a)},S=(e,{startValue:t,endValue:r,entryIndex:a,numEntries:n},{overrideValue:l,dateFunction:o,date:u,flag:d})=>{if(-1===["pad","interpolate","average","dateFunction","value"].indexOf(e))throw new Error("fill Type not supported");let f;return"pad"===e?(f=i(s(t).map(([e,r])=>[e,t[e]])),d=d||["fill","pad"]):"interpolate"===e?(f=i(s(t).map(([e,l])=>[e,t[e]+(a+1)*((r[e]-t[e])/(n+1))])),d=d||["fill",e]):"average"===e?(f=i(s(t).map(([e,a])=>[e,(t[e]+r[e])/n])),d=d||["fill",e]):"dateFunction"===e&&o?(f=i(s(t).map(([e,t])=>[e,o(u)])),d=d||["fill",e]):"value"===e?(f=i(s(t).map(([e,t])=>{let r;return r="number"==typeof l?l:l[e],[e,r]})),d=d||["fill",e]):(f=i(s(t).map(([e,t])=>[e,null])),d=["fill"]),y({},f,{flag:d})},b=e=>{let t=e.group("month").select(e=>({month:e.first().date.month(),value:e.getSeries("value").where(e=>e).average()})),r=new Map(t.toArray().map(({month:e,value:t})=>[e,t])),a=t.getSeries("value").average();return r.set("default",a),r},O=e=>{let t=e.groupBy(e=>e.date.year()).select(e=>{const t=e.first().date.startOf("year");let r=new E(e).downsample(["month",1],"avg"),a=r.getSeries("value").average(),n=b(r);return n.set("avg",a),[t.year(),n]});return new Map(t.toArray())},A=(e,{years:t=3,series:r="value",aggregator:a="average",validOnly:n=!0}={})=>{let l=e.groupBy(e=>e.date.startOf("month").toDate()).select(e=>({date:e.first().date.startOf("month"),value:e.getSeries(r).where(e=>!n||Boolean(e)).average()})).inflate().withIndex(e=>e.date.toDate()).bake(),o=l.groupBy(e=>e.date.month()).select(e=>{let a=new Map(e.rollingWindow(t).select(t=>[t.last().date.year(),t.getSeries(r).where(e=>!n||Boolean(e)).average()||e.getSeries(r).where(e=>!n||Boolean(e)).average()]));return e.where(e=>!a.has(e.date.year())).forEach(e=>{let t=l.before(e.date.toDate()).count()>0?l.before(e.date.toDate()).last()[r]:l.getSeries(r).average();a.set(e.date.year(),t)}),[e.first().date.month(),a]});return new Map(o.toArray())},x=e=>t=>e.get(t.date.month()),D=e=>t=>{let r=t.date.month(),a=t.date.year();return e.has(r)?e.has(r)?e.get(r).get(a):u([...e.get(r).values()]):u([...e.values()].map(e=>[...e.values()].reduce((e,t)=>e.concat(t),[])))},N=(e,{validOnly:t=!0,series:r="value"}={})=>t=>{let a=e.before(t.date.toDate()).getSeries(r).where(e=>e);return a.count()>0?a.last():0},I=(e,{validOnly:t=!0,series:r="value",years:a=3}={})=>t=>{let n,l=e.subset(["date",r]).after(t.date.subtract(a,"year").toDate()).before(t.date.toDate()).bake(),o=l.where(e=>e.date.month()===t.date.month()).where(e=>e.date.date()===t.date.date()).where(e=>e.date.hour()===t.date.hour()).where(e=>e.date.minute()===t.date.minute()).getSeries(r).where(e=>e);return n=o.count()<a?o.appendPair([null,l.getSeries(r).where(e=>e).average()]).average():o.average(),n};function C(e){let t=e.deflate(e=>e.x).toArray(),a=p(t),n=u(t);if(0===a){let t=e.generateSeries({ares:e=>0});return{R:0,std:a,mean:n,df:t}}let l=new r({values:t.map(e=>({x:e,ares:Math.abs(e-n)/a}))});return{R:c(l.deflate(e=>e.ares).toArray()),df:l,std:a,mean:n}}function M(e,t,r){let a=function(e,t,r){return 1-r/(2*(e-t+1))}(e,t,r),n=function(e,t){return new m(t).inv(e)}(a,e-t-1);return{lambda:n*(e-t)/Math.sqrt((e-t-1+Math.pow(n,2))*(e-t+1)),p:a,t:n}}const V=(e,t,r)=>.6745*(e-r)/t;function B(e){let t=d(e),r=f(e),a=(e=e.sort((e,t)=>t-e).filter(e=>e>0).map(e=>[e,V(e,r,t)])).filter(([e,t])=>Math.abs(t)>=3.5);return{thresholds:{upper:Math.min(Infinity,...a.map(e=>e[0])),lower:0}}}function E(r=[],a={}){if(r instanceof E)return r;r instanceof t.DataFrame&&(r=r.toArray());let n={values:r=r.map(t=>{let{date:r}=t,a=w(t,["date"]);return y({date:e(r)},a)}).sort((e,t)=>e.date.valueOf()-t.date.valueOf()),index:r.map(({date:e})=>e.toDate()),considerAllRows:!0};t.DataFrame.call(this,n)}function k({series:e="value",lower:t,upper:r}={}){if(t>r)throw new Error("thresholds invalid");let a=this.where(a=>((e,t,r)=>e<t||e>r)(a[e],t,r)).generateSeries({raw:t=>t[e],flag:({flag:e=[]})=>["outlier",...e]}).transformSeries({[e]:e=>null});return new E(this.merge(a))}function F(e=["value"],t="total"){return new E(this.generateSeries({[t]:t=>e.map(e=>t[e]||0).reduce((e,t)=>e+t,0)}))}function R(e){let t;if(e instanceof E||(e=new E(e)),e.count()>1){let r,a=this.getInterval(),o=e.interval;if(!n(a,o))throw console.error(a,o),new Error("baseline and data intervals do not match");switch(a[0]){case"day":r=e=>`${e.month()}-${e.date()}`;break;case"month":r=e=>e.month();break;default:r=e=>0}let i=e.withIndex(e=>r(e.date)),s=e=>{let t=i.at(e);return t&&l(t,"value")?t.value:i.getSeries("value").average()};t=this.generateSeries({baseline:e=>s(r(e.date))})}else t=this.generateSeries({baseline:t=>e.first().value});return t=t.generateSeries({delta:e=>{return(e.value-(t=e.baseline))/t;var t}}),new E(t)}(E.prototype=Object.create(t.DataFrame.prototype)).constructor=E,E.prototype.getValueColumns=function(){return this.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray()},E.prototype.getInterval=function(){return(t=>{let r=e(),a=e().add(t);return a.diff(r,"month",!0)>=11?["year",Math.ceil(a.diff(r,"year",!0))]:a.diff(r,"day",!0)>=28?["month",Math.ceil(a.diff(r,"month",!0))]:a.diff(r,"hour",!0)>=23?["day",Math.ceil(a.diff(r,"day",!0))]:a.diff(r,"minute",!0)>=55?["hour",Math.ceil(a.diff(r,"hour",!0))]:["minute",a.diff(r,"minute")]})(this.getIndex().window(2).select(e=>e.last()-e.first()).detectValues().orderBy(e=>-e.Frequency).first().Value)},E.prototype.getDateRange=function(t,r){let a=e(this.first().date),n=e(this.last().date);return r&&(a=a.startOf(r),n=n.endOf(r)),n.diff(a,t)},E.prototype.cvrsme=function(e,t){let r=this.subset([e,t]).resetIndex().generateSeries({actual:t=>t[e]||0,simulated:e=>e[t]||0}).dropSeries([e,t]).generateSeries({diff:e=>e.actual-e.simulated}),a=r.count(),n=r.getSeries("actual").sum()/a;return Math.sqrt(r.getSeries("diff").sum()/(a-1))/n},E.prototype.nmbe=function(e,t){let r=this.subset([e,t]).resetIndex().generateSeries({actual:t=>t[e]||0,simulated:e=>e[t]||0}).dropSeries([e,t]).generateSeries({diff:e=>e.actual-e.simulated}),a=r.count(),n=r.getSeries("actual").sum()/a;return r.getSeries("diff").sum()/((a-1)*n)},E.prototype.asCSV=function(){return this.transformSeries({date:t=>e(t).toISOString()}).toCSV()},E.prototype.calculateStatistics=function(e={}){const{column:t="value",filterZeros:r=!1,filterNegative:a=!0}=e;let n=this.deflate(e=>e[t]).where(e=>!isNaN(e));a&&(n=n.where(e=>e>=0)),r&&(n=n.where(e=>0!==e));let l=n.median(),o=n.average(),i=n.count(),s=n.std(),u=n.min(),d=n.max(),p=f(n.toArray()),c=h(n.toArray(),.25),g=h(n.toArray(),.75);return{median:l,mean:o,count:i,std:s,min:u,max:d,mad:p,q1:c,q3:g,iqr:g-c}},E.prototype.calculateThresholdOptions=function({k:e,filterZeros:t=!0,filterNegative:a=!0}={}){let n=this.where(e=>null==e.flag||Array.isArray(e.flag)&&0===e.flag.length).where(e=>!isNaN(e.value)&&null!==e.value).getSeries("value");if(t&&(n=n.where(e=>0!==e)),a&&(n=n.where(e=>e>0)),e||(e=n.count()<1e3?Math.floor(.15*n.count()):Math.min(1e3,Math.floor(.02*n.count()))),n.count()<5)return{};let{thresholds:l}=function(e=[],t=10,a=.05){let n,l=new r({values:e.map(e=>({x:e}))}),o=l.getSeries("x").count(),i=1,s=[],u=!1;for(;i<=t;){let e={};if(1===i){let{R:t,df:r,mean:a,std:o}=C(l);n=r.where(e=>e.ares!==t),e=Object.assign({},e,{mean:a,std:o,Value:r.where(e=>e.ares===t).getSeries("x").first(),R:t})}else{let{R:t,df:r,mean:a,std:l}=C(n);n=r.where(e=>e.ares!==t),e=Object.assign({},e,{mean:a,std:l,Value:r.where(e=>e.ares===t).getSeries("x").first(),R:t})}let{lambda:t}=M(o,i,a);if(e=Object.assign({},e,{lambda:t}),s.push(e),u&&e.R>e.lambda&&(u=!1),0===e.R)break;if(e.R<e.lambda){if(u)break;u=!0}i++}s=new r(s).generateSeries({outlier:e=>e.R>e.lambda}).takeWhile(e=>e.outlier);let d=s.where(e=>e.Value>0).deflate(e=>e.Value);return{outliers:s,thresholds:{lower:0,upper:d.count()>0?d.min():Infinity},iterations:i}}(n.toArray(),e),{thresholds:o}=function(e){let t=h(e,.25),r=h(e,.75),a=r-t;return{thresholds:{lowerInner:t-1.5*a,upperInner:t-3*a,lowerOuter:r+1.5*a,upperOuter:r+3*a}}}(n.toArray()),{thresholds:i}=B(n.toArray());return{esd:l,box:o,modz:i}},E.prototype.getBestThreshold=function(){try{let e=this.calculateThresholdOptions();const t=g([o(e,"esd.upper",null),o(e,"modz.upper",null),o(e,"box.lowerOuter",null),o(e,"box.upperOuter",null)].filter(e=>e),2);return c(t.reduce((e,t)=>e.length>t.length?e:t))}catch(e){throw console.error(e),new Error("Cannot determine threshold")}},E.prototype.betweenDates=function(t,r){return t=e(t).toDate(),r=e(r).toDate(),new E(this.between(t,r))},E.prototype.transformAllSeries=function(e,{exclude:t}){let r=this,a=a=r.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray();return t&&Array.isArray(t)&&(a=a.filter(e=>-1===t.indexOf(e))),a.forEach(t=>{r=r.transformSeries({[t]:t=>isNaN(t)?t:e(t)})}),r},E.prototype.reset=function(){return new E(this.withSeries({value:e=>e.flag&&Array.isArray(e.flag)&&e.flag.length>0?e.raw:e.value}).subset(["date","value"]).where(e=>!isNaN(e.value)&&null!==e.value))},E.prototype.fromTotalizer=function(e="value",{acceptInitial:t=!1}={}){return this.subset(["date",e]).toArray().map((r,a,n)=>{let l=t?r[e]:null;return n[a-1]&&(l=r[e]-n[a-1][e]),{date:r.date,[e]:l}}),new E(a)},E.prototype.toTotalizer=function(e,{}={}){return this.subset(["date",e]).toArray().map((t,r,a)=>{let n=a.slice(0,r).map(t=>t[e]).reduce((e,t)=>e+t,0);return{date:t.date,[e]:n}}),new E(a)},E.prototype.group=function(t,r){if(-1===["hour","day","week","month","year"].indexOf(t))throw new Error("interval type not supported");return this.groupBy(r=>e(r.date).startOf(t))},E.prototype.removeOutliers=k,E.prototype.clean=k,E.prototype.downsample=function([t,r],a="sum"){if(-1===["hour","day","month","year"].indexOf(t))throw new Error("interval type not supported");if(-1===["sum","avg","median"].indexOf(a))throw new Error("aggregation type not suppported, only:");let n=e=>e.date.startOf(t),l=this.getValueColumns();return r&&(n=e=>e.date.startOf(t).add(r,t)),new E(this.groupBy(n).select(e=>y({date:e.first().date.startOf(t)},i([...l.map(t=>{let r;switch(a){case"median":r=e.deflate(e=>e[t]).where(e=>!isNaN(e)&&null!==e).median();break;case"avg":r=e.deflate(e=>e[t]).where(e=>!isNaN(e)&&null!==e).average();break;default:r=e.deflate(e=>e[t]).where(e=>!isNaN(e)&&null!==e).sum()}return[t,r]}),...e.getColumnNames().filter(e=>"date"!==e).filter(e=>-1===l.indexOf(e)).map(t=>{let r=e.deflate(e=>e[t]).distinct().toArray();return 1===r.length&&(r=r[0]),[t,r]})]))).inflate().withIndex(t=>e(t.date).toDate()))},E.prototype.downsampleClean=function([t,r],a=.8){if(-1===["hour","day","month","year"].indexOf(t))throw new Error("interval type not supported");let n=e=>e.date.startOf(t);this.getValueColumns(),r&&(n=e=>e.date.startOf(t).add(r,t));let l=this.groupBy(n).select(e=>({date:e.first().date.startOf(t),value:new E(e).dataQuality().setIndex("flag").at("clean").percent>=a?e.deflate(e=>e.value).where(e=>!isNaN(e)&&null!==e).sum():null})).inflate().withIndex(t=>e(t.date).toDate());return new E(l)},E.prototype.upsample=function([t,r],a="average",n=!1){let l=this.fillGaps((([t,r=1])=>(a,n)=>{const l=a[0];return Math.floor(e(n[0]).diff(l,t,!0)/r)>0})([t,r]),((t,[r,a],{overrideValue:n,dateFunction:l,flag:o}={})=>(i,s)=>{const u=e(i[0]),d=e(s[0]),f=Math.floor(e(d).diff(u,r)/a)-1,h=i[1],p=s[1],c=[];for(let i=0;i<f;++i){let s=S(t,{startValue:h,endValue:p,entryIndex:i,numEntries:f},{overrideValue:n,dateFunction:l,flag:o}),d=e(u).add((i+1)*a,r).toDate(),g=[d.valueOf(),Object.assign({},s,{date:d})];c.push(g)}return c})(a,[t,r]));return n||(l=l.dropSeries(["flag"])),new E(l)},E.prototype.populate=function(e,t="average"){let r;switch(t){case"fill":r=e;break;default:r=e/this.count()}return new E(this.generateSeries({value:e=>r}))},E.prototype.reduceToValue=function(e){return new E(this.generateSeries({value:t=>function(e,t=[]){return t.map(t=>e[t]).filter(e=>e)[0]||0}(t,e)}).subset(["date","value"]))},E.prototype.cumulativeSum=function(e){e||(e=this.getValueColumns()),e&!Array.isArray(e)&&(e=[e]);let t=this;return e.forEach(e=>{var r;t=t.withSeries(e,t.getSeries(e).select((r=0,e=>r+=e)))}),new E(t)},E.prototype.totalRows=F,E.prototype.totalRow=F,E.prototype.totalColumns=F,E.prototype.rollingPercentChange=function(e="value",t=!0){let r=this.getSeries(e).rollingWindow(2).select(e=>{let t=(e.last()-e.first())/Math.abs(e.first());return[e.getIndex().last(),t]}).withIndex(e=>e[0]).select(e=>e[1]),a=this.withSeries("delta",r);return t||(a=a.transformSeries({delta:e=>100*e})),new E(a)},E.prototype.baselinePercentChange=R,E.prototype.addBaselineDelta=R,E.prototype.annualIntensity=function(t=1){let r=this.getInterval();return new E(this.groupBy(e=>e.date.year()).select(a=>{let n=a.first().date,l=a.last().date.add(r[1]||1,r[0]||"month"),o=(s=n,365/e(l).diff(e(s),"day"));var s;return y({startDate:n,endDate:l},i(this.getValueColumns().map(e=>[e,a.deflate(t=>t[e]).where(e=>e).sum()*o/t])))}).inflate().renameSeries({startDate:"date"}).dropSeries("endDate"))},E.prototype.fillMissing=function(){let e=this.first().date.toDate(),t=this.last().date.toDate(),r=this.getInterval(),a=E.blank(e,t,r,"missing").withIndex(e=>e.date.valueOf()).merge(this.withIndex(e=>e.date.valueOf())).generateSeries({flag:e=>null==e.value?e.flag:void 0});return a=new E(a),a},E.prototype.fillNull=function({series:e="value",value:t,callback:r}){const a=t=>null==t[e];return r?new E(this.generateSeries({flag:e=>a(e)?["fill",...e.flag||[]]:e.flag,[e]:t=>a(t)?r(t):t[e]})):t?new E(this.generateSeries({flag:e=>a(e)?["fill",...e.flag||[]]:e.flag}).transformSeries({[e]:e=>null==e?t:e})):this},E.prototype.zeroFaultDetection=function(e){Array.isArray(e)||(e=[e,1]),e=v(e);let t=this.where(e=>0===e.value).ensureSeries("interval",this.where(e=>0===e.value).getSeries("date").amountChange()).where(t=>t.interval<=e).subset(["date"]).generateSeries({value:e=>null,flag:e=>["zeroFault"]});return new E(this.merge(t))},E.prototype.dataQuality=function(){let e=this.count(),t=this.where(e=>Array.isArray(e.flag)&&e.flag.length>0).groupBy(e=>e.flag.toString()).select(t=>({flag:t.first().flag,count:t.count(),percent:t.count()/e})).inflate(),r=this.where(e=>null==e.flag||Array.isArray(e.flag)&&0===e.flag.length).count();return t.appendPair([t.count(),{flag:"clean",count:r,percent:r/e}]).orderByDescending(e=>e.count)},E.prototype.monthlyWithQual=function(){let t=this.getInterval(),r=v(t);return new E(this.groupBy(t=>e(t.date).startOf().valueOf()).select(t=>{const a=e(t.first().date).startOf("month").toDate();let n=Math.floor(e(a).endOf("month").diff(e(a),"millisecond")/r),l=(new Date(a.getFullYear(),a.getMonth()+1,0).getDate(),t.getSeries("value").where(e=>e&&0!==e).toArray().length),o=t.getSeries("value").where(e=>!isNaN(e)).sum();return{date:a,value:isNaN(o)?0:o,count:l,fullCount:n,score:l/n}}).inflate().withIndex(e=>e.date.toDate()))},E.prototype.threeYearAverage=function(t,r="value",a){t=e(t),a||(a=this.getSeries(r).where(e=>!isNaN(e)&&null!==e).average());let n=this.before(t.toDate()).where(e=>e.date.month()===t.month()).orderBy(t=>e(t.date)).tail(3);return n.count()>0?n.getSeries(r).where(e=>!isNaN(e)&&null!==e).average():a},E.prototype.averageFill=function(){let e=this,t=e.getSeries("value").where(e=>!isNaN(e)&&null!==e).average();return new E(e.generateSeries({rollingAverage:r=>e.threeYearAverage(r.date,"value",t)}).generateSeries({flag:e=>e.value?e.flag:["filled",...e.flag||[]]}).generateSeries({value:e=>e.value?e.value:e.rollingAverage}).dropSeries(["rollingAverage"]))},E.prototype.toArray=function(){const e=[];for(const t of this.getContent().values)void 0!==t&&e.push(t);return e.map(e=>{let{date:t}=e,r=w(e,["date"]);return y({date:t.toDate()},r)})},E.prototype.atDate=function(t){if(!this.none()){t=e(t).valueOf();for(const e of this.getContent().pairs)if(e[0].valueOf()===t)return e[1]}},E.blank=function(t,r,[a,n=1],l){if(["minute","hour","day","month","year"].indexOf(a)<0)throw console.error(i),new Error("interval type not supported");t=e(t),r=e(r);let o=[t],i=v([a,n]);for(;o[o.length-1].valueOf()<r.valueOf();)o.push(e(o[o.length-1]).add(n,a));let s=new E(o.map(e=>({date:e})));return l&&(s=new E(s.generateSeries({flag:e=>[l]}))),s},E.aggregate=function(e){Array.isArray(e)||(e=[e]),e=e.map(e=>new E(e));const r=new Set(e.map(e=>e.getValueColumns()).reduce((e,t)=>e.concat(t),[]));return new E(t.DataFrame.concat(e).groupBy(e=>e.date).select(e=>{let t={date:e.first().date};return r.forEach(r=>t[r]=e.deflate(e=>e[r]).sum()),e.getColumnNames().filter(e=>"date"!==e).filter(e=>-1===r.has(e)).forEach(r=>{let a=e.deflate(e=>e[r]).distinct().toArray();1===a.length&&(a=a[0]),t[r]=a}),t}).inflate())},E.concat=e=>(Array.isArray(e)||(e=[e]),e=e.map(e=>new E(e).withIndex(e=>e.date.valueOf())),new E(t.DataFrame.concat(e))),E.merge=e=>(Array.isArray(e)||(e=[e]),e=e.map(e=>new E(e).withIndex(e=>e.date.valueOf())),new E(t.DataFrame.merge(e)));export{E as Timeseries,I as annualAverage,O as annualMonthlyAverageMap,b as averageMonthlyMap,D as fillMonthlyBAnnualyMap,x as fillMonthlyByMap,A as monthlyRollingAverageMap,N as pad};
//# sourceMappingURL=index.modern.js.map
