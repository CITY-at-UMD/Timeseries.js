import{DataFrame as e}from"data-forge";import r from"dayjs";import t from"lodash/isEqual";import a from"lodash/has";import n from"lodash/fromPairs";import i from"lodash/toPairs";import{median as s,medianAbsoluteDeviation as l,quantile as o,sampleStandardDeviation as u,mean as d,max as f}from"simple-statistics";import{Studentt as v}from"distributions";function h(){return(h=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function m(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r.indexOf(t=i[a])>=0||(n[t]=e[t]);return n}var p=e=>{var t=r(),a=r().add(e);return a.diff(t,"month",!0)>=11?["year",Math.ceil(a.diff(t,"year",!0))]:a.diff(t,"day",!0)>=28?["month",Math.ceil(a.diff(t,"month",!0))]:a.diff(t,"hour",!0)>=23?["day",Math.ceil(a.diff(t,"day",!0))]:a.diff(t,"minute",!0)>=55?["hour",Math.ceil(a.diff(t,"hour",!0))]:["minute",a.diff(t,"minute")]},c=e=>{var[t,a]=e,n=r();return r().add(a,t).diff(n)},w=e=>{var[t,a=1]=e;return(e,n)=>{var i=e[0];return Math.floor(r(n[0]).diff(i,t,!0)/a)>0}},g=(e,r,t)=>{var a,{startValue:s,endValue:l,entryIndex:o,numEntries:u}=r,{overrideValue:d,dateFunction:f,date:v,flag:m}=t;if(-1===["pad","interpolate","average","dateFunction","value"].indexOf(e))throw new Error("fill Type not supported");return"pad"===e?(a=n(i(s).map(e=>{var[r,t]=e;return[r,s[r]]})),m=m||["fill","pad"]):"interpolate"===e?(a=n(i(s).map(e=>{var[r,t]=e;return[r,s[r]+(o+1)*((l[r]-s[r])/(u+1))]})),m=m||["fill",e]):"average"===e?(a=n(i(s).map(e=>{var[r,t]=e;return[r,(s[r]+l[r])/u]})),m=m||["fill",e]):"dateFunction"===e&&f?(a=n(i(s).map(e=>{var[r,t]=e;return[r,f(v)]})),m=m||["fill",e]):"value"===e?(a=n(i(s).map(e=>{var[r,t]=e;return[r,"number"==typeof d?d:d[r]]})),m=m||["fill",e]):(a=n(i(s).map(e=>{var[r,t]=e;return[r,null]})),m=["fill"]),h({},a,{flag:m})},y=function(e,t,a){var[n,i]=t,{overrideValue:s,dateFunction:l,flag:o}=void 0===a?{}:a;return(t,a)=>{for(var u=r(t[0]),d=r(a[0]),f=Math.floor(r(d).diff(u,n)/i)-1,v=t[1],h=a[1],m=[],p=0;p<f;++p){var c=g(e,{startValue:v,endValue:h,entryIndex:p,numEntries:f},{overrideValue:s,dateFunction:l,flag:o}),w=r(u).add((p+1)*i,n).toDate(),y=[w.valueOf(),Object.assign({},c,{date:w})];m.push(y)}return m}};function b(r){var t=r.deflate(e=>e.x).toArray(),a=u(t),n=d(t);if(0===a){var i=r.generateSeries({ares:e=>0});return{R:0,std:a,mean:n,df:i}}var s=new e({values:t.map(e=>({x:e,ares:Math.abs(e-n)/a}))});return{R:f(s.deflate(e=>e.ares).toArray()),df:s,std:a,mean:n}}function O(e,r,t){var a=function(e,r,t){return 1-t/(2*(e-r+1))}(e,r,t),n=function(e,r){return new v(r).inv(e)}(a,e-r-1);return{lambda:n*(e-r)/Math.sqrt((e-r-1+Math.pow(n,2))*(e-r+1)),p:a,t:n}}var A=(e,r,t)=>.6745*(e-t)/r;function x(e){var r=s(e),t=l(e),a=(e=e.sort((e,r)=>r-e).filter(e=>e>0).map(e=>[e,A(e,t,r)])).filter(e=>{var[r,t]=e;return Math.abs(t)>=3.5});return{thresholds:{upper:Math.min(Infinity,...a.map(e=>e[0])),lower:0}}}var S=(e,t)=>365/r(t).diff(r(e),"day"),E=(e,r)=>(r-e)/e;class M extends e{constructor(t){if(void 0===t&&(t=[]),t instanceof M)return t;t instanceof e&&(t=t.toArray()),super({values:t=t.map(e=>{var{date:t}=e,a=m(e,["date"]);return h({date:r(t)},a)}).sort((e,r)=>e.date.valueOf()-r.date.valueOf()),index:t.map(e=>{var{date:r}=e;return r.toDate()}),considerAllRows:!0})}get interval(){var e=this.getIndex().window(2).select((function(e){return e.last()-e.first()})).detectValues().orderBy(e=>-e.Frequency).orderBy(e=>e.Value).first().Value;return p(e)}get valueColumns(){return this.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray()}dateRange(e,t){var a=r(this.first().date),n=r(this.last().date);return t&&(a=a.startOf(t),n=n.endOf(t)),n.diff(a,e)}at(e){return super.at(r(e))}calculateThresholds(r){var{k:t,filterZeros:a=!0,filterNegative:n=!0}=void 0===r?{}:r,i=this.where(e=>null==e.flag||Array.isArray(e.flag)&&0===e.flag.length).where(e=>!isNaN(e.value)&&null!==e.value).getSeries("value");if(a&&(i=i.where(e=>0!==e)),n&&(i=i.where(e=>e>0)),t||(t=i.count()<1e3?Math.floor(.15*i.count()):Math.min(1e3,Math.floor(.02*i.count()))),i.count()<5)return{};var s,l,u,d,{thresholds:f}=function(r,t,a){void 0===r&&(r=[]),void 0===t&&(t=10),void 0===a&&(a=.05);for(var n,i=new e({values:r.map(e=>({x:e}))}),s=i.getSeries("x").count(),l=1,o=[],u=!1;l<=t;){var d={};1===l?function(){var{R:e,df:r,mean:t,std:a}=b(i);n=r.where(r=>r.ares!==e),d=Object.assign({},d,{mean:t,std:a,Value:r.where(r=>r.ares===e).getSeries("x").first(),R:e})}():function(){var{R:e,df:r,mean:t,std:a}=b(n);n=r.where(r=>r.ares!==e),d=Object.assign({},d,{mean:t,std:a,Value:r.where(r=>r.ares===e).getSeries("x").first(),R:e})}();var{lambda:f}=O(s,l,a);if(d=Object.assign({},d,{lambda:f}),o.push(d),u&&d.R>d.lambda&&(u=!1),0===d.R)break;if(d.R<d.lambda){if(u)break;u=!0}l++}var v=(o=new e(o).generateSeries({outlier:e=>e.R>e.lambda}).takeWhile(e=>e.outlier)).where(e=>e.Value>0).deflate(e=>e.Value);return{outliers:o,thresholds:{lower:0,upper:v.count()>0?v.min():Infinity},iterations:l}}(i.toArray(),t),{thresholds:v}=(s=i.toArray(),{thresholds:{lowerInner:(l=o(s,.25))-1.5*(d=(u=o(s,.75))-l),upperInner:l-3*d,lowerOuter:u+1.5*d,upperOuter:u+3*d}}),{thresholds:h}=x(i.toArray());return{esd:f,box:v,modz:h}}calculateStatistics(e){var{column:r="value",filterZeros:t=!1,filterNegative:a=!0}=void 0===e?{}:e,n=this.deflate(e=>e[r]).where(e=>!isNaN(e));a&&(n=n.where(e=>e>=0)),t&&(n=n.where(e=>0!==e));var i=n.median(),s=n.average(),u=n.count(),d=n.std(),f=n.min(),v=n.max(),h=l(n.toArray()),m=o(n.toArray(),.25),p=o(n.toArray(),.75);return{median:i,mean:s,count:u,std:d,min:f,max:v,mad:h,q1:m,q3:p,iqr:p-m}}dataQuality(){return this.count(),this.getSeries("flag").where(e=>null==e||Array.isArray(e)&&0===e.length).count(),this.getSeries("flag").where(e=>Array.isArray(e)).where(e=>-1!==e.indexOf("missing")).count(),this.getSeries("flag").where(e=>Array.isArray(e)).where(e=>-1!==e.indexOf("outlier")).count(),this.getSeries("flag").where(e=>Array.isArray(e)).where(e=>-1!==e.indexOf("zeroFill")).count(),{}}transformAll(e,r){void 0===e&&(e=e=>e);var t=this;return r||(r=t.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray()),r.forEach(r=>{t=t.transformSeries({[r]:r=>isNaN(r)?r:e(r)})}),new M(t)}removeOutliers(e){var{lowerThreshold:r,upperThreshold:t}=void 0===e?{}:e;if(r>t)throw new Error("thresholds invalid");var a=(e,r,t)=>e<r||e>t,n=this.generateSeries({raw:e=>a(e.value,r,t)?e.value:null,flag:e=>a(e.value,r,t)?["outlier"]:null}).transformSeries({value:e=>a(e,r,t)?null:e});return new M(n)}reset(){return this.withSeries({value:e=>e.raw&&!isNaN(e.raw)?e.raw:e.value}).dropSeries(["flag","raw"])}group(e,t){if(-1===["hour","day","month","year"].indexOf(e))throw new Error("interval type not supported");return this.groupBy(t=>r(t.date).startOf(e))}resample(e,a){var[n,i=1]=e;if(-1===["hour","day","month","year"].indexOf(n))throw new Error("interval type not supported");var s=this.interval;if(t(s,[n,i]))return this;var l=r(0);return r(0).add(s[1],s[0]).diff(l)<r(0).add(i,n).diff(l)?this.downsample([n,i],a):this.upsample([n,i],a)}upsample(e,r){var[t,a]=e;void 0===r&&(r="avg");var n=this.fillGaps(w([t,a]),y(r,[t,a]));return new M(n)}downsample(e,t){var[a,i]=e;if(void 0===t&&(t="sum"),-1===["hour","day","month","year"].indexOf(a))throw new Error("interval type not supported");if(-1===["sum","avg","median"].indexOf(t))throw new Error("aggregation type not suppported, only:");var s=e=>e.date.startOf(a),l=this.valueColumns;i&&(s=e=>e.date.startOf(a).add(i,a));var o=this.groupBy(s).select(e=>h({date:e.first().date.startOf(a)},n([...l.map(r=>{var a;switch(t){case"median":a=e.deflate(e=>e[r]).where(e=>e).median();break;case"avg":a=e.deflate(e=>e[r]).where(e=>e).average();break;default:a=e.deflate(e=>e[r]).where(e=>e).sum()}return[r,a]}),...e.getColumnNames().filter(e=>"date"!==e).filter(e=>-1===l.indexOf(e)).map(r=>{var t=e.deflate(e=>e[r]).distinct().toArray();return 1===t.length&&(t=t[0]),[r,t]})]))).inflate().withIndex(e=>r(e.date).toDate());return new M(o)}populate(e,r){var t;switch(void 0===r&&(r="avg"),r){case"fill":t=e;break;default:t=e/this.getIndex().count()}var a=this.generateSeries({value:e=>t});return new M(a)}fill(){var e=this.first().date.toDate(),r=this.last().date.toDate(),t=this.interval;console.time("blank");var a=M.blank(e,r,t,"missing");console.timeEnd("blank"),console.time("join");var n=this.joinOuterRight(a,e=>e.date.valueOf(),e=>e.date.valueOf(),(e,r)=>e||r);return console.timeEnd("join"),console.time("new timeseries"),console.timeEnd("new timeseries"),n}reduceToValue(e){var r=this.generateSeries({value:r=>(function(e,r){return void 0===r&&(r=[]),r.map(r=>e[r]).filter(e=>e)[0]||0})(r,e)}).subset(["date","value"]);return new M(r)}clean(e,r){var{lowerThreshold:t,upperThreshold:a}=r,n=this.toArray().map(e=>{if(e.value>a||e.value<t){var{value:r,flag:n=[]}=e,i=m(e,["value","flag"]);return n||(n=[]),Array.isArray(n)||(n=[n]),h({value:void 0,raw:r,flag:["outlier",...n]},i)}return e});return new M(n)}static blank(e,t,a,n){var[i,s=1]=a;if(["minute","hour","day","month","year"].indexOf(i)<0)throw console.error(o),new Error("interval type not supported");e=r(e),t=r(t);for(var l=[e],o=c([i,s]);l[l.length-1].valueOf()<t.valueOf();)l.push(r(l[l.length-1]).add(s,i));var u=new M(l.map(e=>({date:e})));return console.log(u.count()),n&&(u=u.generateSeries({flag:e=>[n]})),new M(u)}static aggregate(r){Array.isArray(r)||(r=[r]),r=r.map(e=>new M(e));var t=e.concat(r).groupBy(e=>e.date).select(e=>{var r={date:e.first().date};return e.getColumnNames().filter(e=>"date"!==e).forEach(t=>r[t]=e.deflate(e=>e[t]).sum()),r}).inflate().toArray();return new M(t)}annualMonthlyAverage(e){var{startDate:r,endDate:t}=e;this.downsample(["month",1],"sum").between(r,t).getSeries("value").average()}annualIntensity(e){void 0===e&&(e=1);var r=this.interval,t=this.groupBy(e=>e.date.year()).select(t=>{var a=t.first().date,i=t.last().date.add(r[1]||1,r[0]||"month"),s=S(a,i);return h({startDate:a,endDate:i},n(this.valueColumns.map(r=>[r,t.deflate(e=>e[r]).where(e=>e).sum()*s/e])))}).inflate().renameSeries({startDate:"date"}).dropSeries("endDate");return new M(t)}addBaselineDelta(e){var r;if(e instanceof M||(e=new M(e)),e.count()>1){var n,i=this.interval,s=e.interval;if(!t(i,s))throw console.error(i,s),new Error("baseline and data intervals do not match");switch(i[0]){case"day":n=e=>e.month()+"-"+e.date();break;case"month":n=e=>e.month();break;default:n=e=>0}var l=e.withIndex(e=>n(e.date));r=this.generateSeries({baseline:e=>(e=>{var r=l.at(e);return r&&a(r,"value")?r.value:l.getSeries("value").average()})(n(e.date))})}else r=this.generateSeries({baseline:r=>e.first().value});return r=r.generateSeries({delta:e=>E(e.baseline,e.value)}),new M(r)}}export default M;
//# sourceMappingURL=index.modern.js.map
