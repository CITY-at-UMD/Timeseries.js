import e from"dayjs";import t,{DataFrame as r}from"data-forge";import a from"lodash/isEqual";import n from"lodash/has";import i from"lodash/fromPairs";import o from"lodash/toPairs";import{median as s,medianAbsoluteDeviation as l,quantile as u,sampleStandardDeviation as d,mean as f,max as h}from"simple-statistics";import{Studentt as v}from"distributions";function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e}).apply(this,arguments)}var m=(e,t,r)=>{var a,{startValue:n,endValue:s,entryIndex:l,numEntries:u}=t,{overrideValue:d,dateFunction:f,date:h,flag:v}=r;if(-1===["pad","interpolate","average","dateFunction","value"].indexOf(e))throw new Error("fill Type not supported");return"pad"===e?(a=i(o(n).map(e=>{var[t,r]=e;return[t,n[t]]})),v=v||["fill","pad"]):"interpolate"===e?(a=i(o(n).map(e=>{var[t,r]=e;return[t,n[t]+(l+1)*((s[t]-n[t])/(u+1))]})),v=v||["fill",e]):"average"===e?(a=i(o(n).map(e=>{var[t,r]=e;return[t,(n[t]+s[t])/u]})),v=v||["fill",e]):"dateFunction"===e&&f?(a=i(o(n).map(e=>{var[t,r]=e;return[t,f(h)]})),v=v||["fill",e]):"value"===e?(a=i(o(n).map(e=>{var[t,r]=e;return[t,"number"==typeof d?d:d[t]]})),v=v||["fill",e]):(a=i(o(n).map(e=>{var[t,r]=e;return[t,null]})),v=["fill"]),p({},a,{flag:v})};function c(e){var t=e.deflate(e=>e.x).toArray(),a=d(t),n=f(t);if(0===a){var i=e.generateSeries({ares:e=>0});return{R:0,std:a,mean:n,df:i}}var o=new r({values:t.map(e=>({x:e,ares:Math.abs(e-n)/a}))});return{R:h(o.deflate(e=>e.ares).toArray()),df:o,std:a,mean:n}}function y(e,t,r){var a=function(e,t,r){return 1-r/(2*(e-t+1))}(e,t,r),n=function(e,t){return new v(t).inv(e)}(a,e-t-1);return{lambda:n*(e-t)/Math.sqrt((e-t-1+Math.pow(n,2))*(e-t+1)),p:a,t:n}}var g=(e,t,r)=>.6745*(e-r)/t;function w(e){var t=s(e),r=l(e),a=(e=e.sort((e,t)=>t-e).filter(e=>e>0).map(e=>[e,g(e,r,t)])).filter(e=>{var[t,r]=e;return Math.abs(r)>=3.5});return{thresholds:{upper:Math.min(Infinity,...a.map(e=>e[0])),lower:0}}}var b=t.DataFrame;function O(e){var{column:t="value",lowerThreshold:r,upperThreshold:a}=void 0===e?{}:e;if(r>a)throw new Error("thresholds invalid");var n=this.where(e=>((e,t,r)=>e<void 0||e>void 0)(e.value)).generateSeries({raw:e=>e.value,flag:e=>{var{flag:t=[]}=e;return["outlier",...t]}}).transformSeries({value:e=>null});return this.merge(n)}b.prototype.setDateIndex=function(t){if(void 0===t&&(t="date"),-1===this.getColumnNames().indexOf(t))throw new Error("No Date Column in DataFrame");return this.orderBy(e=>e[t].valueOf()).withIndex(t=>e(t.date).toDate())},b.prototype.getInterval=function(){var t,r,a;return t=this.getIndex().window(2).select(e=>e.last()-e.first()).detectValues().orderBy(e=>-e.Frequency).orderBy(e=>e.Value).first().Value,r=e(),(a=e().add(t)).diff(r,"month",!0)>=11?["year",Math.ceil(a.diff(r,"year",!0))]:a.diff(r,"day",!0)>=28?["month",Math.ceil(a.diff(r,"month",!0))]:a.diff(r,"hour",!0)>=23?["day",Math.ceil(a.diff(r,"day",!0))]:a.diff(r,"minute",!0)>=55?["hour",Math.ceil(a.diff(r,"hour",!0))]:["minute",a.diff(r,"minute")]},b.prototype.getValueColumns=function(){return this.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray()},b.prototype.getDateRange=function(t,r){var a=e(this.first().date),n=e(this.last().date);return r&&(a=a.startOf(r),n=n.endOf(r)),n.diff(a,t)},b.prototype.calculateThresholdOptions=function(e){var{k:t,filterZeros:a=!0,filterNegative:n=!0}=void 0===e?{}:e,i=this.where(e=>null==e.flag||Array.isArray(e.flag)&&0===e.flag.length).where(e=>!isNaN(e.value)&&null!==e.value).getSeries("value");if(a&&(i=i.where(e=>0!==e)),n&&(i=i.where(e=>e>0)),t||(t=i.count()<1e3?Math.floor(.15*i.count()):Math.min(1e3,Math.floor(.02*i.count()))),i.count()<5)return{};var o,s,l,d,{thresholds:f}=function(e,t,a){void 0===e&&(e=[]),void 0===t&&(t=10),void 0===a&&(a=.05);for(var n,i=new r({values:e.map(e=>({x:e}))}),o=i.getSeries("x").count(),s=1,l=[],u=!1;s<=t;){var d={};1===s?function(){var{R:e,df:t,mean:r,std:a}=c(i);n=t.where(t=>t.ares!==e),d=Object.assign({},d,{mean:r,std:a,Value:t.where(t=>t.ares===e).getSeries("x").first(),R:e})}():function(){var{R:e,df:t,mean:r,std:a}=c(n);n=t.where(t=>t.ares!==e),d=Object.assign({},d,{mean:r,std:a,Value:t.where(t=>t.ares===e).getSeries("x").first(),R:e})}();var{lambda:f}=y(o,s,a);if(d=Object.assign({},d,{lambda:f}),l.push(d),u&&d.R>d.lambda&&(u=!1),0===d.R)break;if(d.R<d.lambda){if(u)break;u=!0}s++}var h=(l=new r(l).generateSeries({outlier:e=>e.R>e.lambda}).takeWhile(e=>e.outlier)).where(e=>e.Value>0).deflate(e=>e.Value);return{outliers:l,thresholds:{lower:0,upper:h.count()>0?h.min():Infinity},iterations:s}}(i.toArray(),t),{thresholds:h}=(o=i.toArray(),{thresholds:{lowerInner:(s=u(o,.25))-1.5*(d=(l=u(o,.75))-s),upperInner:s-3*d,lowerOuter:l+1.5*d,upperOuter:l+3*d}}),{thresholds:v}=w(i.toArray());return{esd:f,box:h,modz:v}},b.prototype.claculateStatistics=function(e){void 0===e&&(e={});var{column:t="value",filterZeros:r=!1,filterNegative:a=!0}=e,n=this.deflate(e=>e[t]).where(e=>!isNaN(e));a&&(n=n.where(e=>e>=0)),r&&(n=n.where(e=>0!==e));var i=n.median(),o=n.average(),s=n.count(),d=n.std(),f=n.min(),h=n.max(),v=l(n.toArray()),p=u(n.toArray(),.25),m=u(n.toArray(),.75);return{median:i,mean:o,count:s,std:d,min:f,max:h,mad:v,q1:p,q3:m,iqr:m-p}},b.prototype.transformAllSeries=function(e,t){var{exclude:r}=t,a=this,n=n=a.detectTypes().where(e=>"number"===e.Type).distinct(e=>e.Column).getSeries("Column").toArray();return r&&Array.isArray(r)&&(n=n.filter(e=>-1===r.indexOf(e))),n.forEach(t=>{a=a.transformSeries({[t]:t=>isNaN(t)?t:e(t)})}),a},b.prototype.removeOutliers=O,b.prototype.clean=O,b.prototype.group=function(t,r){if(-1===["hour","day","month","year"].indexOf(t))throw new Error("interval type not supported");return this.groupBy(r=>e(r.date).startOf(t))},b.prototype.downsample=function(t,r){var[a,n]=t;if(void 0===r&&(r="sum"),-1===["hour","day","month","year"].indexOf(a))throw new Error("interval type not supported");if(-1===["sum","avg","median"].indexOf(r))throw new Error("aggregation type not suppported, only:");var o=e=>e.date.startOf(a),s=this.valueColumns;return n&&(o=e=>e.date.startOf(a).add(n,a)),this.groupBy(o).select(e=>p({date:e.first().date.startOf(a)},i([...s.map(t=>{var a;switch(r){case"median":a=e.deflate(e=>e[t]).where(e=>e).median();break;case"avg":a=e.deflate(e=>e[t]).where(e=>e).average();break;default:a=e.deflate(e=>e[t]).where(e=>e).sum()}return[t,a]}),...e.getColumnNames().filter(e=>"date"!==e).filter(e=>-1===s.indexOf(e)).map(t=>{var r=e.deflate(e=>e[t]).distinct().toArray();return 1===r.length&&(r=r[0]),[t,r]})]))).inflate().withIndex(t=>e(t.date).toDate())},b.prototype.upsample=function(t,r){var[a,n]=t;return void 0===r&&(r="avg"),this.fillGaps((t=>{var[r,a=1]=t;return(t,n)=>{var i=t[0];return Math.floor(e(n[0]).diff(i,r,!0)/a)>0}})([a,n]),function(t,r,a){var[n,i]=r,{overrideValue:o,dateFunction:s,flag:l}={};return(r,a)=>{for(var u=e(r[0]),d=e(a[0]),f=Math.floor(e(d).diff(u,n)/i)-1,h=r[1],v=a[1],p=[],c=0;c<f;++c){var y=m(t,{startValue:h,endValue:v,entryIndex:c,numEntries:f},{overrideValue:o,dateFunction:s,flag:l}),g=e(u).add((c+1)*i,n).toDate(),w=[g.valueOf(),Object.assign({},y,{date:g})];p.push(w)}return p}}(r,[a,n]))},b.prototype.populateSeries=function(e,t){var r;switch(void 0===t&&(t="avg"),t){case"fill":r=e;break;default:r=e/this.count()}return this.generateSeries({value:e=>r})},b.prototype.fill=function(){var e=this.first().date.toDate(),t=this.last().date.toDate(),r=this.getInterval(),a=b.blank(e,t,r,"missing");return this.joinOuterRight(a,e=>e.date.valueOf(),e=>e.date.valueOf(),(e,t)=>e||t)},b.prototype.reduceToValue=function(e){return this.generateSeries({value:t=>(function(e,t){return void 0===t&&(t=[]),t.map(t=>e[t]).filter(e=>e)[0]||0})(t,e)}).subset(["date","value"])},b.prototype.annualIntensity=function(e){void 0===e&&(e=1);var t=this.getInterval();return this.groupBy(e=>e.date.year()).select(r=>{var a=r.first().date,n=r.last().date.add(t[1]||1,t[0]||"month"),o=((e,t)=>365/dayjs(t).diff(dayjs(e),"day"))(a,n);return p({startDate:a,endDate:n},i(this.valueColumns.map(t=>[t,r.deflate(e=>e[t]).where(e=>e).sum()*o/e])))}).inflate().renameSeries({startDate:"date"}).dropSeries("endDate")},b.prototype.addBaselineDelta=function(e){var t;if(e instanceof b||(e=new b(e).setDateIndex()),e.count()>1){var r,i=this.getInterval(),o=e.interval;if(!a(i,o))throw console.error(i,o),new Error("baseline and data intervals do not match");switch(i[0]){case"day":r=e=>e.month()+"-"+e.date();break;case"month":r=e=>e.month();break;default:r=e=>0}var s=e.withIndex(e=>r(e.date));t=this.generateSeries({baseline:e=>(e=>{var t=s.at(e);return t&&n(t,"value")?t.value:s.getSeries("value").average()})(r(e.date))})}else t=this.generateSeries({baseline:t=>e.first().value});return t.generateSeries({delta:e=>((e,t)=>(t-e)/e)(e.baseline,e.value)})},b.blank=function(t,r,a,n){var[i,o=1]=a;if(["minute","hour","day","month","year"].indexOf(i)<0)throw console.error(l),new Error("interval type not supported");t=e(t),r=e(r);for(var s=[t],l=(t=>{var[r,a]=t,n=e();return e().add(a,r).diff(n)})([i,o]);s[s.length-1].valueOf()<r.valueOf();)s.push(e(s[s.length-1]).add(o,i));var u=new b(s.map(e=>({date:e}))).setDateIndex();return n&&(u=u.generateSeries({flag:e=>[n]})),u},b.aggregate=function(e){Array.isArray(e)||(e=[e]),e=e.map(e=>new b(e).setDateIndex());var r=[...new Set(e.map(e=>e.getValueColumns()).reduce((e,t)=>e.concat(t),[]))],a=t.DataFrame.concat(e).groupBy(e=>e.date).select(e=>{var t={date:e.first().date};return r.forEach(r=>t[r]=e.deflate(e=>e[r]).sum()),t}).inflate().toArray();return new b(a.toArray()).setDateIndex()};export default b;
//# sourceMappingURL=index.modern.js.map
